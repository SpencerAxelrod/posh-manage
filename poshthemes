#!/usr/bin/env zsh

# Oh My Posh Theme Manager
# A script to list and switch between Oh My Posh themes

THEMES_DIR="$HOME/.poshthemes"
ZSHRC_FILE="$HOME/.zshrc"
BACKUP_DIR="$HOME/.zshrc_backups"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Function to print colored output
print_colored() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Function to create backup directory
create_backup_dir() {
    if [ ! -d "$BACKUP_DIR" ]; then
        mkdir -p "$BACKUP_DIR"
        print_colored $GREEN "Created backup directory: $BACKUP_DIR"
    fi
}

# Function to backup .zshrc
backup_zshrc() {
    create_backup_dir
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    local backup_file="$BACKUP_DIR/.zshrc_backup_$timestamp"
    cp "$ZSHRC_FILE" "$backup_file"
    print_colored $GREEN "Backed up .zshrc to: $backup_file"
}

# Function to get current theme
get_current_theme() {
    if [ -f "$ZSHRC_FILE" ]; then
        grep -o "oh-my-posh init zsh --config ~/.poshthemes/[^)]*" "$ZSHRC_FILE" | sed 's/.*~\/.poshthemes\///' | sed 's/)//' 2>/dev/null
    fi
}

# Function to list available themes
list_themes() {
    print_colored $CYAN "üìÅ Available Oh My Posh themes in $THEMES_DIR:"
    print_colored $CYAN "=================================================="
    
    if [ ! -d "$THEMES_DIR" ]; then
        print_colored $RED "‚ùå Themes directory not found: $THEMES_DIR"
        return 1
    fi
    
    local current_theme=$(get_current_theme)
    local count=0
    
    for theme_file in "$THEMES_DIR"/*.omp.json; do
        if [ -f "$theme_file" ]; then
            local theme_name=$(basename "$theme_file")
            count=$((count + 1))
            
            if [ "$theme_name" = "$current_theme" ]; then
                print_colored $GREEN "  $count. $theme_name ‚≠ê (current)"
            else
                print_colored $YELLOW "  $count. $theme_name"
            fi
        fi
    done
    
    if [ $count -eq 0 ]; then
        print_colored $RED "‚ùå No .omp.json theme files found in $THEMES_DIR"
        return 1
    fi
    
    print_colored $CYAN "=================================================="
    print_colored $BLUE "Total themes found: $count"
    
    if [ -n "$current_theme" ]; then
        print_colored $BLUE "Current theme: $current_theme"
    else
        print_colored $YELLOW "‚ö†Ô∏è  No Oh My Posh theme currently configured in .zshrc"
    fi
}

# Function to switch theme
switch_theme() {
    local target_theme="$1"
    
    if [ -z "$target_theme" ]; then
        print_colored $RED "‚ùå Please specify a theme name"
        return 1
    fi
    
    # Add .omp.json extension if not provided
    if [[ "$target_theme" != *.omp.json ]]; then
        target_theme="${target_theme}.omp.json"
    fi
    
    local theme_path="$THEMES_DIR/$target_theme"
    
    if [ ! -f "$theme_path" ]; then
        print_colored $RED "‚ùå Theme not found: $theme_path"
        print_colored $YELLOW "üí° Use 'list' command to see available themes"
        return 1
    fi
    
    print_colored $BLUE "üîÑ Switching to theme: $target_theme"
    
    # Backup current .zshrc
    backup_zshrc
    
    # Check if oh-my-posh line exists
    if grep -q "oh-my-posh init zsh --config" "$ZSHRC_FILE"; then
        # Replace existing oh-my-posh line
        if [[ "$OSTYPE" == "darwin"* ]]; then
            # macOS
            sed -i '' "s|eval \"\$(oh-my-posh init zsh --config ~/.poshthemes/[^)]*)\"|eval \"\$(oh-my-posh init zsh --config ~/.poshthemes/$target_theme)\"|" "$ZSHRC_FILE"
        else
            # Linux
            sed -i "s|eval \"\$(oh-my-posh init zsh --config ~/.poshthemes/[^)]*)\"|eval \"\$(oh-my-posh init zsh --config ~/.poshthemes/$target_theme)\"|" "$ZSHRC_FILE"
        fi
    else
        # Add oh-my-posh line if it doesn't exist
        echo "" >> "$ZSHRC_FILE"
        echo "# Initialize oh-my-posh for custom prompt themes" >> "$ZSHRC_FILE"
        echo "eval \"\$(oh-my-posh init zsh --config ~/.poshthemes/$target_theme)\"" >> "$ZSHRC_FILE"
    fi
    
    print_colored $GREEN "‚úÖ Theme switched to: $target_theme"
    print_colored $BLUE "üîÑ Sourcing .zshrc to apply changes..."
    
    # Source the .zshrc file
    source "$ZSHRC_FILE"
    
    print_colored $GREEN "üéâ Theme change complete!"
    print_colored $YELLOW "üí° If you open a new terminal, the theme will be automatically applied"
}

# Function to show current theme with preview
show_current() {
    local current_theme=$(get_current_theme)
    
    if [ -n "$current_theme" ]; then
        print_colored $GREEN "Current theme: $current_theme"
        
        # Show a few lines from the theme file
        local theme_path="$THEMES_DIR/$current_theme"
        if [ -f "$theme_path" ]; then
            print_colored $BLUE "\nTheme configuration preview:"
            print_colored $CYAN "================================"
            head -10 "$theme_path" | sed 's/^/  /'
            print_colored $CYAN "================================"
        fi
    else
        print_colored $YELLOW "‚ö†Ô∏è  No Oh My Posh theme currently configured"
    fi
}

# Function to show help
show_help() {
    print_colored $CYAN "Oh My Posh Theme Manager"
    print_colored $CYAN "========================"
    echo ""
    print_colored $YELLOW "Usage: $0 [COMMAND] [THEME_NAME]"
    echo ""
    print_colored $BLUE "Commands:"
    print_colored $GREEN "  list              List all available themes"
    print_colored $GREEN "  switch <theme>    Switch to specified theme"
    print_colored $GREEN "  current           Show current theme and preview"
    print_colored $GREEN "  help              Show this help message"
    echo ""
    print_colored $BLUE "Examples:"
    print_colored $YELLOW "  $0 list"
    print_colored $YELLOW "  $0 switch iterm2"
    print_colored $YELLOW "  $0 switch powerlevel10k_rainbow.omp.json"
    print_colored $YELLOW "  $0 current"
    echo ""
    print_colored $PURPLE "Note: Theme files should be in $THEMES_DIR"
    print_colored $PURPLE "Backups are automatically created in $BACKUP_DIR"
}

# Main script logic
main() {
    case "${1:-help}" in
        "list"|"ls"|"-l")
            list_themes
            ;;
        "switch"|"set"|"-s")
            if [ -z "$2" ]; then
                print_colored $RED "‚ùå Please specify a theme name"
                print_colored $YELLOW "üí° Usage: $0 switch <theme_name>"
                exit 1
            fi
            switch_theme "$2"
            ;;
        "current"|"show"|"-c")
            show_current
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            print_colored $RED "‚ùå Unknown command: $1"
            show_help
            exit 1
            ;;
    esac
}

# Run the main function with all arguments
main "$@"
